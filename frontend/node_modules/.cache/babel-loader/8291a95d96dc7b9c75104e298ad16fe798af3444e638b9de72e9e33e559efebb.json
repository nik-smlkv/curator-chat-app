{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u043D\\u0430\\u044F \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\\\curator-chat-app\\\\frontend\\\\src\\\\components\\\\SingleChat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ChatState } from '../Context/ChatProvider';\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { getSender, getSenderFull } from '../config/ChatLogics';\nimport ProfileModal from './Miscellaneous/ProfileModal';\nimport UpdateGroupChatModal from './Miscellaneous/UpdateGroupChatModal';\nimport axios from 'axios';\nimport './style.css';\nimport ScrollableChat from './ScrollableChat';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:5000\";\nvar socket, selectedChatCompare;\nconst SingleChat = _ref => {\n  _s();\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const toast = useToast();\n  const {\n    user,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      setLoading(true);\n      const {\n        data\n      } = await axios.get(`/api/message/${selectedChat._id}`, config);\n      setMessages(data);\n      setLoading(false);\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    }\n  };\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on('connection', () => setSocketConnected(true));\n    socket.on('typing', () => setIsTyping(true));\n    socket.on('stop typing', () => setIsTyping(false));\n  }, []);\n  useEffect(() => {\n    fetchMessages();\n    selectedChatCompare = selectedChat;\n\n    // eslint-disable-next-line\n  }, [selectedChat]);\n  useEffect(() => {\n    socket.on('message recieved', newMessageRecieved => {\n      if (!selectedChatCompare || selectedChatCompare._id !== newMessageRecieved.chat._id) {\n        // give notification\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n  const sendMessage = async event => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        setNewMessage(\"\");\n        const {\n          data\n        } = await axios.post(\"/api/message\", {\n          content: newMessage,\n          chatId: selectedChat\n        }, config);\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\"\n        });\n      }\n    }\n  };\n  const typingHandler = e => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) {\n      return;\n    }\n    if (!typing) {\n      setTyping(true);\n      socket.emit('typing', selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = newDate().getTime();\n      time;\n    }, timerLength);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        fontFamily: \"inherit\",\n        display: \"flex\",\n        justifyContent: {\n          base: \"space-between\"\n        },\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          display: {\n            base: \"flex\",\n            md: \"none\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 14\n          }, this),\n          onClick: () => setSelectedChat(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }, this), !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [getSender(user, selectedChat.users), /*#__PURE__*/_jsxDEV(ProfileModal, {\n            user: getSenderFull(user, selectedChat.users)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [selectedChat.chatName.toUpperCase(), /*#__PURE__*/_jsxDEV(UpdateGroupChatModal, {\n            fetchAgain: fetchAgain,\n            setFetchAgain: setFetchAgain,\n            fetchMessages: fetchMessages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDir: \"column\",\n        justifyContent: \"flex-end\",\n        p: 3,\n        bg: \"#E8E8E8\",\n        w: \"100%\",\n        h: \"100%\",\n        borderRadius: \"lg\",\n        overflowY: \"hidden\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          size: \"xl\",\n          w: 20,\n          h: 20,\n          alignSelf: \"center\",\n          margin: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 8\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: /*#__PURE__*/_jsxDEV(ScrollableChat, {\n            messages: messages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          onKeyDown: sendMessage,\n          isRequired: true,\n          mt: 3,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            variant: \"filled\",\n            bg: \"#E0E0E0\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435..\",\n            value: newMessage,\n            onChange: typingHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"31px\",\n        pb: 3,\n        fontFamily: \"inherit\",\n        children: \"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\u043D\\u0430 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n_s(SingleChat, \"NbisE2fM6WV0vcXtBN/NOMZ+fgM=\", false, function () {\n  return [useToast];\n});\n_c = SingleChat;\nexport default SingleChat;\nvar _c;\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["React","useEffect","useState","ChatState","Box","Text","IconButton","Spinner","useToast","FormControl","Input","ArrowBackIcon","getSender","getSenderFull","ProfileModal","UpdateGroupChatModal","axios","ScrollableChat","io","jsxDEV","_jsxDEV","Fragment","_Fragment","ENDPOINT","socket","selectedChatCompare","SingleChat","_ref","_s","fetchAgain","setFetchAgain","toast","user","selectedChat","setSelectedChat","messages","setMessages","loading","setLoading","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","fetchMessages","config","headers","Authorization","token","data","get","_id","emit","error","title","description","status","duration","isClosable","position","on","newMessageRecieved","chat","sendMessage","event","key","post","content","chatId","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","newDate","time","children","fontSize","base","md","pb","px","w","fontFamily","display","justifyContent","alignItems","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isGroupChat","users","chatName","toUpperCase","flexDir","p","bg","h","borderRadius","overflowY","size","alignSelf","margin","className","onKeyDown","isRequired","mt","variant","placeholder","onChange","_c","$RefreshReg$"],"sources":["E:/Дипломная работа/curator-chat-app/frontend/src/components/SingleChat.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ChatState } from '../Context/ChatProvider'\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { ArrowBackIcon } from '@chakra-ui/icons';\r\nimport { getSender, getSenderFull } from '../config/ChatLogics';\r\nimport ProfileModal from './Miscellaneous/ProfileModal';\r\nimport UpdateGroupChatModal from './Miscellaneous/UpdateGroupChatModal';\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport ScrollableChat from './ScrollableChat';\r\nimport io from 'socket.io-client';\r\nconst ENDPOINT = \"http://localhost:5000\";\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n\tconst toast = useToast();\r\n\tconst { user, selectedChat, setSelectedChat } = ChatState();\r\n\tconst [messages, setMessages] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [newMessage, setNewMessage] = useState(\"\");\r\n\tconst [socketConnected, setSocketConnected] = useState(false);\r\n\tconst [typing, setTyping] = useState(false);\r\n\tconst [istyping, setIsTyping] = useState(false);\r\n\r\n\tconst fetchMessages = async () => {\r\n\t\tif (!selectedChat) return;\r\n\r\n\t\ttry {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${user.token}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`/api/message/${selectedChat._id}`,\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\t\t\tsetMessages(data);\r\n\t\t\tsetLoading(false);\r\n\t\t\tsocket.emit(\"join chat\", selectedChat._id);\r\n\t\t} catch (error) {\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Error Occured!\",\r\n\t\t\t\tdescription: \"Failed to Load the Messages\",\r\n\t\t\t\tstatus: \"error\",\r\n\t\t\t\tduration: 5000,\r\n\t\t\t\tisClosable: true,\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket = io(ENDPOINT);\r\n\t\tsocket.emit(\"setup\", user);\r\n\t\tsocket.on('connection', () => setSocketConnected(true));\r\n\t\tsocket.on('typing', () => setIsTyping(true));\r\n\t\tsocket.on('stop typing', () => setIsTyping(false));\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchMessages();\r\n\t\tselectedChatCompare = selectedChat;\r\n\r\n\t\t// eslint-disable-next-line\r\n\t}, [selectedChat]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('message recieved', (newMessageRecieved) => {\r\n\t\t\tif (!selectedChatCompare || selectedChatCompare._id !== newMessageRecieved.chat._id) {\r\n\t\t\t\t// give notification\r\n\t\t\t} else {\r\n\t\t\t\tsetMessages([...messages, newMessageRecieved]);\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\r\n\r\n\tconst sendMessage = async (event) => {\r\n\t\tif (event.key === \"Enter\" && newMessage) {\r\n\t\t\tsocket.emit(\"stop typing\", selectedChat._id);\r\n\t\t\ttry {\r\n\t\t\t\tconst config = {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t\t\tAuthorization: `Bearer ${user.token}`,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tsetNewMessage(\"\");\r\n\t\t\t\tconst { data } = await axios.post(\r\n\t\t\t\t\t\"/api/message\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontent: newMessage,\r\n\t\t\t\t\t\tchatId: selectedChat,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tconfig\r\n\t\t\t\t);\r\n\t\t\t\tsocket.emit(\"new message\", data);\r\n\t\t\t\tsetMessages([...messages, data]);\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Error Occured!\",\r\n\t\t\t\t\tdescription: \"Failed to send the Message\",\r\n\t\t\t\t\tstatus: \"error\",\r\n\t\t\t\t\tduration: 5000,\r\n\t\t\t\t\tisClosable: true,\r\n\t\t\t\t\tposition: \"bottom\",\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst typingHandler = (e) => {\r\n\t\tsetNewMessage(e.target.value);\r\n\r\n\t\tif(!socketConnected) {return;}\r\n\t\tif(!typing){\r\n\t\t\tsetTyping(true);\r\n\t\t\tsocket.emit('typing', selectedChat._id);\r\n\t\t}\r\n\t\tlet lastTypingTime = new Date().getTime();\r\n\t\tvar timerLength = 3000;\r\n\t\tsetTimeout(()=>{\r\n\t\t\tvar timeNow = newDate().getTime();\r\n\t\t\ttime\r\n\t\t}, timerLength)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{selectedChat\r\n\t\t\t\t? (<>\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tfontSize={{ base: \"28px\", md: \"30px\" }}\r\n\t\t\t\t\t\tpb={3}\r\n\t\t\t\t\t\tpx={2}\r\n\t\t\t\t\t\tw=\"100%\"\r\n\t\t\t\t\t\tfontFamily=\"inherit\"\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\tjustifyContent={{ base: \"space-between\" }}\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tdisplay={{ base: \"flex\", md: \"none\" }}\r\n\t\t\t\t\t\t\ticon={<ArrowBackIcon />}\r\n\t\t\t\t\t\t\tonClick={() => setSelectedChat(\"\")}\r\n\t\t\t\t\t\t/>{!selectedChat.isGroupChat\r\n\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t(<>\r\n\t\t\t\t\t\t\t\t{getSender(user, selectedChat.users)}\r\n\t\t\t\t\t\t\t\t<ProfileModal user={getSenderFull(user, selectedChat.users)} />\r\n\t\t\t\t\t\t\t</>)\r\n\t\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{selectedChat.chatName.toUpperCase()}\r\n\t\t\t\t\t\t\t\t\t{<UpdateGroupChatModal fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} fetchMessages={fetchMessages} />}\r\n\t\t\t\t\t\t\t\t</>)}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\tflexDir=\"column\"\r\n\t\t\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t\t\t\tp={3}\r\n\t\t\t\t\t\tbg=\"#E8E8E8\"\r\n\t\t\t\t\t\tw=\"100%\"\r\n\t\t\t\t\t\th=\"100%\"\r\n\t\t\t\t\t\tborderRadius=\"lg\"\r\n\t\t\t\t\t\toverflowY=\"hidden\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\t\t\tsize=\"xl\"\r\n\t\t\t\t\t\t\t\tw={20}\r\n\t\t\t\t\t\t\t\th={20}\r\n\t\t\t\t\t\t\t\talignSelf=\"center\"\r\n\t\t\t\t\t\t\t\tmargin=\"auto\"\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className='messages'><ScrollableChat messages={messages} /></div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<FormControl onKeyDown={sendMessage} isRequired mt={3}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\tbg=\"#E0E0E0\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Введите сообщение..\"\r\n\t\t\t\t\t\t\t\tvalue={newMessage}\r\n\t\t\t\t\t\t\t\tonChange={typingHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t</>)\r\n\t\t\t\t: (<Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text fontSize=\"31px\" pb={3} fontFamily=\"inherit\">\r\n\t\t\t\t\t\tНажмите на пользователя, чтобы начать диалог\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</Box>)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SingleChat\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}